import { OnInit, ElementRef, ChangeDetectorRef, OnDestroy, EventEmitter, OnChanges, SimpleChanges, AfterViewInit } from '@angular/core';
import { ControlValueAccessor, ControlContainer } from '@angular/forms';
import { Observable } from 'rxjs';
import { SelectOption, DisplayedSelectOption } from './popover-select.interface';
import { PopoverChipDirective, PopoverMenuDirective, PopoverOptionDirective } from '../../directives';
import * as i0 from "@angular/core";
export declare class PopoverSelectComponent implements OnInit, OnChanges, OnDestroy, AfterViewInit, ControlValueAccessor {
    private cdr;
    private controlContainer;
    options: SelectOption[];
    async: (searchPhrase?: string) => Observable<any>;
    value: any;
    bindLabel: string;
    bindValue: string;
    multiselect: boolean;
    clearable: boolean;
    searchable: boolean;
    placeholder: string;
    notFoundText: string;
    changed: EventEmitter<any>;
    inputEl: ElementRef;
    menuRef: PopoverMenuDirective;
    chipTemplate: PopoverChipDirective;
    optionTemplate: PopoverOptionDirective;
    selectedOptions: SelectOption[];
    displayedOptions: DisplayedSelectOption[];
    displayedChips: SelectOption[];
    asyncLoading: boolean;
    isMenuOpen: boolean;
    private destroy$;
    constructor(cdr: ChangeDetectorRef, controlContainer: ControlContainer);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    get noItemsFound(): boolean;
    writeValue(value: any): void;
    registerOnChange(fn: any): void;
    registerOnTouched(): void;
    setDisabledState(isDisabled: boolean): void;
    propagateChange: (value: any) => void;
    getDisplayLabel(option: SelectOption): string;
    onClickItem(clickedOption: SelectOption): void;
    onChangeInput(target: EventTarget): void;
    clear(event: Event): void;
    getDisplayValue(): string;
    closeChip(chip: SelectOption, event: Event): void;
    private onOptionsChange;
    private onInputKeyUp;
    private reset;
    private emitChange;
    private getPropagateValue;
    private onCloseMenu;
    private loadAsyncOptions;
    private updateSelectedItemsForMultiSelection;
    private updateSelectedItemsForSingleSelection;
    private updateDisplayedChips;
    private matchByValueOrReference;
    static ɵfac: i0.ɵɵFactoryDef<PopoverSelectComponent, [null, { optional: true; host: true; skipSelf: true; }]>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<PopoverSelectComponent, "poppy-select", never, { "options": "options"; "async": "async"; "value": "value"; "bindLabel": "bindLabel"; "bindValue": "bindValue"; "multiselect": "multiselect"; "clearable": "clearable"; "searchable": "searchable"; "placeholder": "placeholder"; "notFoundText": "notFoundText"; }, { "changed": "changed"; }, ["chipTemplate", "optionTemplate"], never>;
}
